<?xml version="1.0" encoding="UTF-8"?>
<!-- 开启事务管理的时候要在xsi:schemaLocation中添加
	xmlns:tx="http://www.springframework.org/schema/tx" -->
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
	<!-- 1.配置数据源 -->
	<bean id="dataSource" 
		  class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost:3306/hotel"></property>
		<property name="username" value="root"></property>
		<property name="password" value="niit1234"></property>
	</bean>
	
	<!-- 2.配置会话工厂 引用上面的dataSource和mybatis-conf.xml中的配置 创建sqlSessionFactory -->
	<bean id="sqlSessionFactory"
		  class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis-conf.xml"></property>
	</bean>
	
	<!-- 3.自动扫描mybatis的DTMapper.java接口和DTMapper.xml文件 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.niit.mapper"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>
	
	<!-- 4.事务管理器 将事务管理交给Spring管理 -->
	<bean name="transactionMapper" 
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 5.开启事务管理 -->
	<tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>
	
</beans>